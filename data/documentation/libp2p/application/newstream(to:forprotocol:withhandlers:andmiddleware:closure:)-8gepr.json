{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newStream"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Multiaddr","preciseIdentifier":"s:9MultiaddrAAV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forProtocol"},{"kind":"text","text":" "},{"kind":"internalParam","text":"proto"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"withHandlers"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handlers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/HandlerConfig","preciseIdentifier":"s:6LibP2P13HandlerConfigO","text":"HandlerConfig"},{"kind":"text","text":" = .rawHandlers([]), "},{"kind":"externalParam","text":"andMiddleware"},{"kind":"text","text":" "},{"kind":"internalParam","text":"middleware"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/MiddlewareConfig","preciseIdentifier":"s:6LibP2P16MiddlewareConfigO","text":"MiddlewareConfig"},{"kind":"text","text":" = .custom(nil), "},{"kind":"externalParam","text":"closure"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" (("},{"kind":"typeIdentifier","identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/Request","preciseIdentifier":"s:6LibP2P7RequestC","text":"Request"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/Response","preciseIdentifier":"s:6LibP2P8ResponseC","text":"Response"},{"kind":"text","text":">)) "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/libp2p\/application\/newstream(to:forprotocol:withhandlers:andmiddleware:closure:)-8gepr"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/LibP2P\/documentation\/LibP2P\/Application\/newStream(to:forProtocol:withHandlers:andMiddleware:closure:)-8gepr","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a new outbound stream (channel) to node at the specified multiaddr. This method will resuse existing connections when possible."}],"kind":"symbol","metadata":{"role":"symbol","title":"newStream(to:forProtocol:withHandlers:andMiddleware:closure:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newStream"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Multiaddr","preciseIdentifier":"s:9MultiaddrAAV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forProtocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"withHandlers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HandlerConfig","preciseIdentifier":"s:6LibP2P13HandlerConfigO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"andMiddleware"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MiddlewareConfig","preciseIdentifier":"s:6LibP2P16MiddlewareConfigO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"closure"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:6LibP2P7RequestC"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:6LibP2P8ResponseC"},{"kind":"text","text":">)) "},{"kind":"keyword","text":"throws"}],"symbolKind":"method","externalID":"s:6LibP2P11ApplicationC9newStream2to11forProtocol12withHandlers13andMiddleware7closurey9MultiaddrAJV_SSAA13HandlerConfigOAA0lP0O7NIOCore15EventLoopFutureCyAA8ResponseCGAA7RequestCKctKF","extendedModule":"LibP2P","modules":[{"name":"LibP2P"}]},"hierarchy":{"paths":[["doc:\/\/LibP2P\/documentation\/LibP2P","doc:\/\/LibP2P\/documentation\/LibP2P\/Application"]]},"references":{"doc://LibP2P/documentation/LibP2P/Application":{"role":"symbol","title":"Application","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Application"}],"abstract":[{"type":"text","text":"Core type representing a Libp2p application."},{"type":"text","text":" "},{"type":"text","text":"Storage \/ Lifecycle Abstraction Idea"}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/Application","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Application"}],"url":"\/documentation\/libp2p\/application"},"doc://LibP2P/documentation/LibP2P/HandlerConfig":{"role":"symbol","title":"HandlerConfig","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandlerConfig"}],"abstract":[],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/HandlerConfig","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HandlerConfig"}],"url":"\/documentation\/libp2p\/handlerconfig"},"doc://LibP2P/documentation/LibP2P/MiddlewareConfig":{"role":"symbol","title":"MiddlewareConfig","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareConfig"}],"abstract":[],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/MiddlewareConfig","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MiddlewareConfig"}],"url":"\/documentation\/libp2p\/middlewareconfig"},"https://libp2p.io":{"title":"libp2p","titleInlineContent":[{"type":"text","text":"libp2p"}],"type":"link","identifier":"https:\/\/libp2p.io","url":"https:\/\/libp2p.io"},"doc://LibP2P/documentation/LibP2P":{"role":"collection","title":"LibP2P","abstract":[{"type":"text","text":"A Swift implementation of the modular networking stack "},{"type":"reference","isActive":true,"identifier":"https:\/\/libp2p.io"}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P","kind":"symbol","type":"topic","url":"\/documentation\/libp2p"},"doc://LibP2P/documentation/LibP2P/Application/newStream(to:forProtocol:withHandlers:andMiddleware:closure:)-8gepr":{"role":"symbol","title":"newStream(to:forProtocol:withHandlers:andMiddleware:closure:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newStream"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Multiaddr","preciseIdentifier":"s:9MultiaddrAAV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forProtocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"withHandlers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HandlerConfig","preciseIdentifier":"s:6LibP2P13HandlerConfigO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"andMiddleware"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MiddlewareConfig","preciseIdentifier":"s:6LibP2P16MiddlewareConfigO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"closure"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:6LibP2P7RequestC"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:6LibP2P8ResponseC"},{"kind":"text","text":">)) "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Creates a new outbound stream (channel) to node at the specified multiaddr. This method will resuse existing connections when possible."}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/Application\/newStream(to:forProtocol:withHandlers:andMiddleware:closure:)-8gepr","kind":"symbol","type":"topic","url":"\/documentation\/libp2p\/application\/newstream(to:forprotocol:withhandlers:andmiddleware:closure:)-8gepr"},"doc://LibP2P/documentation/LibP2P/Request":{"role":"symbol","title":"Request","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/Request","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Request"}],"url":"\/documentation\/libp2p\/request"},"doc://LibP2P/documentation/LibP2P/Response":{"role":"symbol","title":"Response","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"abstract":[{"type":"text","text":"A raw response from a server back to the client."}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/Response","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Response"}],"url":"\/documentation\/libp2p\/response"}}}