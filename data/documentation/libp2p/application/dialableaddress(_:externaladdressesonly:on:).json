{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dialableAddress"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"mas"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Multiaddr","preciseIdentifier":"s:9MultiaddrAAV"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"externalAddressesOnly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = true, "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Multiaddr","preciseIdentifier":"s:9MultiaddrAAV"},{"kind":"text","text":"]>"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When we send a findNode query in Kad DHT, we receive Peer messages that contains a list of all listening addresses that peer is known to be listening on."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When we attempt to dial this peer, we don’t want to dial an internal address, so we can pass the entire list into this method to strip out the internal listening address."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Afterwards we have a list of external multiaddrs that we can attempt to dial based on the transports\/protocols we currently have installed…"}]}]}]},{"type":"codeListing","syntax":null,"code":["\/ipfs\/kad\/1.0.0 -> FIND_NODE Query -> Peer(","    PeerID: bafzaajaiaejcb5lroddn74k2rl6fejjdcixcjjujwtdx47bn72esplh6uzsyswb2","    Addresses: [","        \/ip4\/127.0.0.1\/udp\/4001\/quic            <- Internal","        \/ip6\/::1\/udp\/4001\/quic                  <- Internal","        \/ip4\/172.93.101.150\/tcp\/4001","        \/ip4\/127.0.0.1\/tcp\/4001                 <- Internal","        \/ip6\/64:ff9b::ac5d:6596\/udp\/4001\/quic","        \/ip6\/64:ff9b::ac5d:6596\/tcp\/4001","        \/ip6\/::1\/tcp\/4001                       <- Internal","        \/ip4\/172.93.101.150\/udp\/4001\/quic","    ]",")"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/libp2p\/application\/dialableaddress(_:externaladdressesonly:on:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/LibP2P\/documentation\/LibP2P\/Application\/dialableAddress(_:externalAddressesOnly:on:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Strips out local\/internal addresses that are annouced by peers (I’m not sure why they include these addresses)"}],"kind":"symbol","metadata":{"role":"symbol","title":"dialableAddress(_:externalAddressesOnly:on:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dialableAddress"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Multiaddr","preciseIdentifier":"s:9MultiaddrAAV"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"externalAddressesOnly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Multiaddr","preciseIdentifier":"s:9MultiaddrAAV"},{"kind":"text","text":"]>"}],"symbolKind":"method","externalID":"s:6LibP2P11ApplicationC15dialableAddress_21externalAddressesOnly2on7NIOCore15EventLoopFutureCySay9MultiaddrAJVGGAL_SbAG0kL0_ptF","extendedModule":"LibP2P","modules":[{"name":"LibP2P"}]},"hierarchy":{"paths":[["doc:\/\/LibP2P\/documentation\/LibP2P","doc:\/\/LibP2P\/documentation\/LibP2P\/Application"]]},"references":{"https://libp2p.io":{"title":"libp2p","titleInlineContent":[{"type":"text","text":"libp2p"}],"type":"link","identifier":"https:\/\/libp2p.io","url":"https:\/\/libp2p.io"},"doc://LibP2P/documentation/LibP2P":{"role":"collection","title":"LibP2P","abstract":[{"type":"text","text":"A Swift implementation of the modular networking stack "},{"type":"reference","isActive":true,"identifier":"https:\/\/libp2p.io"}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P","kind":"symbol","type":"topic","url":"\/documentation\/libp2p"},"doc://LibP2P/documentation/LibP2P/Application/dialableAddress(_:externalAddressesOnly:on:)":{"role":"symbol","title":"dialableAddress(_:externalAddressesOnly:on:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dialableAddress"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Multiaddr","preciseIdentifier":"s:9MultiaddrAAV"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"externalAddressesOnly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Multiaddr","preciseIdentifier":"s:9MultiaddrAAV"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"Strips out local\/internal addresses that are annouced by peers (I’m not sure why they include these addresses)"}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/Application\/dialableAddress(_:externalAddressesOnly:on:)","kind":"symbol","type":"topic","url":"\/documentation\/libp2p\/application\/dialableaddress(_:externaladdressesonly:on:)"},"doc://LibP2P/documentation/LibP2P/Application":{"role":"symbol","title":"Application","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Application"}],"abstract":[{"type":"text","text":"Core type representing a Libp2p application."},{"type":"text","text":" "},{"type":"text","text":"Storage \/ Lifecycle Abstraction Idea"}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/Application","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Application"}],"url":"\/documentation\/libp2p\/application"}}}