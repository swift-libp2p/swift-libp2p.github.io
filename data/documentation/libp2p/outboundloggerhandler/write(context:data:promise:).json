{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"context","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" belongs to."}]}]},{"name":"data","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The data to write through the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":", wrapped in a "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}]}]},{"name":"promise","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" which should be notified once the operation completes, or nil if no notification should take place."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This should call "},{"type":"codeVoice","code":"context.write"},{"type":"text","text":" to forward the operation to the next "},{"type":"codeVoice","code":"_ChannelOutboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"text","text":"complete the "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" to let the caller know that the operation completed."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/libp2p\/outboundloggerhandler\/write(context:data:promise:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/LibP2P\/documentation\/LibP2P\/OutboundLoggerHandler\/write(context:data:promise:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Called to request a write operation. The write operation will write the messages through the"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"type":"text","text":" is called."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"title":"write(context:data:promise:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:6LibP2P21OutboundLoggerHandlerC5write7context4data7promisey7NIOCore07ChannelE7ContextC_AH6NIOAnyVAH16EventLoopPromiseVyytGSgtF","modules":[{"name":"LibP2P"}]},"hierarchy":{"paths":[["doc:\/\/LibP2P\/documentation\/LibP2P","doc:\/\/LibP2P\/documentation\/LibP2P\/OutboundLoggerHandler"]]},"references":{"doc://LibP2P/documentation/LibP2P/OutboundLoggerHandler":{"role":"symbol","title":"OutboundLoggerHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundLoggerHandler"}],"abstract":[],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/OutboundLoggerHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OutboundLoggerHandler"}],"url":"\/documentation\/libp2p\/outboundloggerhandler"},"https://libp2p.io":{"title":"libp2p","titleInlineContent":[{"type":"text","text":"libp2p"}],"type":"link","identifier":"https:\/\/libp2p.io","url":"https:\/\/libp2p.io"},"doc://LibP2P/documentation/LibP2P/OutboundLoggerHandler/write(context:data:promise:)":{"role":"symbol","title":"write(context:data:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Called to request a write operation. The write operation will write the messages through the"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"type":"text","text":" is called."}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/OutboundLoggerHandler\/write(context:data:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/libp2p\/outboundloggerhandler\/write(context:data:promise:)"},"doc://LibP2P/documentation/LibP2P":{"role":"collection","title":"LibP2P","abstract":[{"type":"text","text":"A Swift implementation of the modular networking stack "},{"type":"reference","isActive":true,"identifier":"https:\/\/libp2p.io"}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P","kind":"symbol","type":"topic","url":"\/documentation\/libp2p"}}}