{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"errorCaught"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"context","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" belongs to."}]}]},{"name":"error","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" that was encountered."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This should call "},{"type":"codeVoice","code":"context.fireErrorCaught"},{"type":"text","text":" to forward the operation to the next "},{"type":"codeVoice","code":"_ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" if you want to allow the next handler to also handle the error."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/libp2p\/inboundloggerhandler\/errorcaught(context:error:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/errorCaught(context:error:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An error was encountered earlier in the inbound "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"errorCaught"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"title":"errorCaught(context:error:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:6LibP2P20InboundLoggerHandlerC11errorCaught7context0F0y7NIOCore07ChannelE7ContextC_s5Error_ptF","modules":[{"name":"LibP2P"}]},"hierarchy":{"paths":[["doc:\/\/LibP2P\/documentation\/LibP2P","doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler"]]},"references":{"doc://LibP2P/documentation/LibP2P":{"role":"collection","title":"LibP2P","abstract":[{"type":"text","text":"A Swift implementation of the modular networking stack "},{"type":"reference","isActive":true,"identifier":"https:\/\/libp2p.io"}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P","kind":"symbol","type":"topic","url":"\/documentation\/libp2p"},"doc://LibP2P/documentation/LibP2P/InboundLoggerHandler/errorCaught(context:error:)":{"role":"symbol","title":"errorCaught(context:error:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"errorCaught"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"An error was encountered earlier in the inbound "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/errorCaught(context:error:)","kind":"symbol","type":"topic","url":"\/documentation\/libp2p\/inboundloggerhandler\/errorcaught(context:error:)"},"doc://LibP2P/documentation/LibP2P/InboundLoggerHandler":{"role":"symbol","title":"InboundLoggerHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundLoggerHandler"}],"abstract":[],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundLoggerHandler"}],"url":"\/documentation\/libp2p\/inboundloggerhandler"},"https://libp2p.io":{"title":"libp2p","titleInlineContent":[{"type":"text","text":"libp2p"}],"type":"link","identifier":"https:\/\/libp2p.io","url":"https:\/\/libp2p.io"}}}