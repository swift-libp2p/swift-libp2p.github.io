{"variants":[{"paths":["\/documentation\/libp2p\/partialidentifymessagedecoder\/bytetomessagedecoder-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/LibP2P\/documentation\/LibP2P\/PartialIdentifyMessageDecoder\/ByteToMessageDecoder-Implementations","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"kind":"article","metadata":{"modules":[{"name":"LibP2P"}],"role":"collectionGroup","title":"ByteToMessageDecoder Implementations"},"hierarchy":{"paths":[["doc:\/\/LibP2P\/documentation\/LibP2P","doc:\/\/LibP2P\/documentation\/LibP2P\/PartialIdentifyMessageDecoder"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/LibP2P\/documentation\/LibP2P\/PartialIdentifyMessageDecoder\/decoderAdded(context:)","doc:\/\/LibP2P\/documentation\/LibP2P\/PartialIdentifyMessageDecoder\/decoderRemoved(context:)","doc:\/\/LibP2P\/documentation\/LibP2P\/PartialIdentifyMessageDecoder\/shouldReclaimBytes(buffer:)","doc:\/\/LibP2P\/documentation\/LibP2P\/PartialIdentifyMessageDecoder\/wrapInboundOut(_:)"],"generated":true}],"references":{"https://libp2p.io":{"title":"libp2p","titleInlineContent":[{"type":"text","text":"libp2p"}],"type":"link","identifier":"https:\/\/libp2p.io","url":"https:\/\/libp2p.io"},"doc://LibP2P/documentation/LibP2P/PartialIdentifyMessageDecoder/shouldReclaimBytes(buffer:)":{"role":"symbol","title":"shouldReclaimBytes(buffer:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shouldReclaimBytes"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Default implementation to detect once bytes should be reclaimed."}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/PartialIdentifyMessageDecoder\/shouldReclaimBytes(buffer:)","kind":"symbol","type":"topic","url":"\/documentation\/libp2p\/partialidentifymessagedecoder\/shouldreclaimbytes(buffer:)"},"doc://LibP2P/documentation/LibP2P/PartialIdentifyMessageDecoder/wrapInboundOut(_:)":{"role":"symbol","title":"wrapInboundOut(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapInboundOut"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InboundOut"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"}],"abstract":[],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/PartialIdentifyMessageDecoder\/wrapInboundOut(_:)","kind":"symbol","type":"topic","url":"\/documentation\/libp2p\/partialidentifymessagedecoder\/wrapinboundout(_:)"},"doc://LibP2P/documentation/LibP2P/PartialIdentifyMessageDecoder/decoderAdded(context:)":{"role":"symbol","title":"decoderAdded(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decoderAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when this "},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"type":"text","text":" is added to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/PartialIdentifyMessageDecoder\/decoderAdded(context:)","kind":"symbol","type":"topic","url":"\/documentation\/libp2p\/partialidentifymessagedecoder\/decoderadded(context:)"},"doc://LibP2P/documentation/LibP2P":{"role":"collection","title":"LibP2P","abstract":[{"type":"text","text":"A Swift implementation of the modular networking stack "},{"type":"reference","isActive":true,"identifier":"https:\/\/libp2p.io"}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P","kind":"symbol","type":"topic","url":"\/documentation\/libp2p"},"doc://LibP2P/documentation/LibP2P/PartialIdentifyMessageDecoder":{"role":"symbol","title":"PartialIdentifyMessageDecoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PartialIdentifyMessageDecoder"}],"abstract":[{"type":"text","text":"Sometimes we receive an "},{"type":"codeVoice","code":"IdentifyMessage"},{"type":"text","text":" without the signed peer record."},{"type":"text","text":" "},{"type":"text","text":"This decoder will handle accumulating partial "},{"type":"codeVoice","code":"IdentifyMessages"},{"type":"text","text":" and pass them along once all parts are available, making our route handler logic simpler and cleaner."}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/PartialIdentifyMessageDecoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PartialIdentifyMessageDecoder"}],"url":"\/documentation\/libp2p\/partialidentifymessagedecoder"},"doc://LibP2P/documentation/LibP2P/PartialIdentifyMessageDecoder/decoderRemoved(context:)":{"role":"symbol","title":"decoderRemoved(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decoderRemoved"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called once this "},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"type":"text","text":" is removed from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/PartialIdentifyMessageDecoder\/decoderRemoved(context:)","kind":"symbol","type":"topic","url":"\/documentation\/libp2p\/partialidentifymessagedecoder\/decoderremoved(context:)"}}}