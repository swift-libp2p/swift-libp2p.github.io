{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundLoggerHandler"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/libp2p\/inboundloggerhandler"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/LibP2P\/7NIOCore14ChannelHandlerP","doc:\/\/LibP2P\/7NIOCore21ChannelInboundHandlerP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundLoggerHandler"}],"title":"InboundLoggerHandler","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:6LibP2P20InboundLoggerHandlerC","modules":[{"name":"LibP2P"}],"navigatorTitle":[{"kind":"identifier","text":"InboundLoggerHandler"}]},"hierarchy":{"paths":[["doc:\/\/LibP2P\/documentation\/LibP2P"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/init()","doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/init(mode:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/channelRead(context:data:)","doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/channelReadComplete(context:)","doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/errorCaught(context:error:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/InboundIn","doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/InboundOut"]},{"title":"Default Implementations","identifiers":["doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/ChannelHandler-Implementations","doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/ChannelInboundHandler-Implementations"],"generated":true}],"references":{"doc://LibP2P/documentation/LibP2P/InboundLoggerHandler/ChannelInboundHandler-Implementations":{"role":"collectionGroup","title":"ChannelInboundHandler Implementations","abstract":[],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/ChannelInboundHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/libp2p\/inboundloggerhandler\/channelinboundhandler-implementations"},"doc://LibP2P/documentation/LibP2P/InboundLoggerHandler/channelRead(context:data:)":{"role":"symbol","title":"channelRead(context:data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/channelRead(context:data:)","kind":"symbol","type":"topic","url":"\/documentation\/libp2p\/inboundloggerhandler\/channelread(context:data:)"},"doc://LibP2P/documentation/LibP2P/InboundLoggerHandler/errorCaught(context:error:)":{"role":"symbol","title":"errorCaught(context:error:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"errorCaught"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"An error was encountered earlier in the inbound "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/errorCaught(context:error:)","kind":"symbol","type":"topic","url":"\/documentation\/libp2p\/inboundloggerhandler\/errorcaught(context:error:)"},"doc://LibP2P/7NIOCore21ChannelInboundHandlerP":{"type":"unresolvable","title":"NIOCore.ChannelInboundHandler","identifier":"doc:\/\/LibP2P\/7NIOCore21ChannelInboundHandlerP"},"doc://LibP2P/documentation/LibP2P/InboundLoggerHandler/InboundIn":{"role":"symbol","title":"InboundLoggerHandler.InboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/InboundIn","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"url":"\/documentation\/libp2p\/inboundloggerhandler\/inboundin"},"doc://LibP2P/documentation/LibP2P/InboundLoggerHandler/InboundOut":{"role":"symbol","title":"InboundLoggerHandler.InboundOut","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/InboundOut","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"url":"\/documentation\/libp2p\/inboundloggerhandler\/inboundout"},"doc://LibP2P/documentation/LibP2P/InboundLoggerHandler":{"role":"symbol","title":"InboundLoggerHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundLoggerHandler"}],"abstract":[],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundLoggerHandler"}],"url":"\/documentation\/libp2p\/inboundloggerhandler"},"https://libp2p.io":{"title":"libp2p","titleInlineContent":[{"type":"text","text":"libp2p"}],"type":"link","identifier":"https:\/\/libp2p.io","url":"https:\/\/libp2p.io"},"doc://LibP2P/7NIOCore14ChannelHandlerP":{"type":"unresolvable","title":"NIOCore.ChannelHandler","identifier":"doc:\/\/LibP2P\/7NIOCore14ChannelHandlerP"},"doc://LibP2P/documentation/LibP2P/InboundLoggerHandler/channelReadComplete(context:)":{"role":"symbol","title":"channelReadComplete(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelReadComplete"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has completed its current read loop, either because no more data is available to read from the transport at this time, or because the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" needs to yield to the event loop to process other I\/O events for other "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s."},{"type":"text","text":" "},{"type":"text","text":"If "},{"type":"codeVoice","code":"ChannelOptions.autoRead"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":" no further read attempt will be made until "},{"type":"codeVoice","code":"ChannelHandlerContext.read"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Channel.read"},{"type":"text","text":" is explicitly called."}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/channelReadComplete(context:)","kind":"symbol","type":"topic","url":"\/documentation\/libp2p\/inboundloggerhandler\/channelreadcomplete(context:)"},"doc://LibP2P/documentation/LibP2P/InboundLoggerHandler/init(mode:)":{"role":"symbol","title":"init(mode:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": LibP2P"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Mode","preciseIdentifier":"s:10LibP2PCore4ModeO"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/init(mode:)","kind":"symbol","type":"topic","url":"\/documentation\/libp2p\/inboundloggerhandler\/init(mode:)"},"doc://LibP2P/documentation/LibP2P/InboundLoggerHandler/ChannelHandler-Implementations":{"role":"collectionGroup","title":"ChannelHandler Implementations","abstract":[],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/ChannelHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/libp2p\/inboundloggerhandler\/channelhandler-implementations"},"doc://LibP2P/documentation/LibP2P/InboundLoggerHandler/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P\/InboundLoggerHandler\/init()","kind":"symbol","type":"topic","url":"\/documentation\/libp2p\/inboundloggerhandler\/init()"},"doc://LibP2P/documentation/LibP2P":{"role":"collection","title":"LibP2P","abstract":[{"type":"text","text":"A Swift implementation of the modular networking stack "},{"type":"reference","isActive":true,"identifier":"https:\/\/libp2p.io"}],"identifier":"doc:\/\/LibP2P\/documentation\/LibP2P","kind":"symbol","type":"topic","url":"\/documentation\/libp2p"}}}